Given the head of a linked list, remove the nth node from the end of the list and return its head.
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        dummy = ListNode(0)
        dummy.next = head
        fast = slow = dummy

    # Move the fast pointer N nodes ahead
        for _ in range(n + 1):
            fast = fast.next

    # Move both pointers until the fast pointer reaches the end
        while fast:
            fast = fast.next
            slow = slow.next
    
    # Remove the Nth node
        slow.next = slow.next.next

        return dummy.next
