The array-form of an integer num is an array representing its digits in left to right order.

For example, for num = 1321, the array form is [1,3,2,1].
Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.

 

Example 1:

Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234
Example 2:

Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455


class Solution:
    def addToArrayForm(self, num: List[int], k: int) -> List[int]:

        res = []
        carry = k
        for i in range(len(num) - 1, -1, -1):
            total = num[i] + carry
            res.insert(0, total % 10)
            carry = total // 10

        while carry > 0:
            res.insert(0, carry % 10)
            carry //= 10

        return res
num = [1, 2, 0, 0], k = 34, res = [], carry = 34
Iterating through the loop (i = 3 to 0):
i = 3: total = num[3] + carry = 0 + 34 = 34, res = [4], carry = 34 // 10 = 3
i = 2: total = num[2] + carry = 0 + 3 = 3, res = [3, 4], carry = 3 // 10 = 0
i = 1: total = num[1] + carry = 2 + 0 = 2, res = [2, 3, 4], carry = 2 // 10 = 0
i = 0: total = num[0] + carry = 1 + 0 = 1, res = [1, 2, 3, 4], carry = 1 // 10 = 0
The loop ends as there are no more elements in the num array.
while carry > 0:
Since carry is 0, the loop does not run.
The final result is res = [1, 2, 3, 4], which represents the array-form of num + k. The code efficiently iterates through the loop and handles the addition without converting the array-form to an integer.
