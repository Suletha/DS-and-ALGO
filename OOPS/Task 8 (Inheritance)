Create a class named 'Member' having the following attributes:

Data Attributes of Member Class

1 - Name

2 - Age

3 - Phone number

4 - Address

5 - Salary

It also has a method named 'printSalary' which prints the salary of the members.

Two classes 'Employee' and 'Manager' inherits the 'Member' class. The 'Employee' and 'Manager' classes have attributes 'specialization' and 'department' respectively.

Both these classes will also have a method print_details.

Print_details of Employee class will print name & 'specialization' and will also call the printSalary method.

Print_details of Manager class will print name & 'department' and will also call the printSalary method.



Now, assign name, age, phone number, address and salary to an employee and a manager by making an object of both of these classes.

and print the same.



class Member:
    def __init__(self, name, age, phone_number, address, salary):
        self.name = name
        self.age = age
        self.phone_number = phone_number
        self.address = address
        self.salary = salary

    def printSalary(self):
        print(self.salary)


class Employee(Member):
    def __init__(self, name, age, phone_number, address, salary, specialization):
        super().__init__(name, age, phone_number, address, salary)
        self.specialization = specialization

    def print_details(self):
        print(self.name)
        print(self.specialization)
        self.printSalary()


class Manager(Member):
    def __init__(self, name, age, phone_number, address, salary, department):
        super().__init__(name, age, phone_number, address, salary)
        self.department = department

    def print_details(self):
        print(self.name)
        print(self.department)
        self.printSalary()



    
    
    

#Do Not change the Below code Method


def main():
    obj = Employee("Ram",25,"7003","Bangalore",1000,"cse");
    obj.print_details();
    
    obj1 = Employee("Shyam",250,"8098","Chennai",2000,"civil");
    obj1.print_details();
    
    obj_Man = Manager("babu",100,"1234","Bangalore",1000,"JP");
    obj_Man.print_details();
    
    obj1_Man = Manager("Rao",250,"456","Kerala",3000,"GC");
    obj1_Man.print_details();

main()



Similar to the Employee class, the Manager class is also defined, which also inherits from the Member class. In its __init__ method, it uses super().__init__ to call the constructor of the Member class and sets the attributes name, age, phone_number, address, and salary. It also initializes the additional attribute department specific to the Manager class.

python
