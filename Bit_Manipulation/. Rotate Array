Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        k = k % len(nums)
        l, r = 0, len(nums)-1
        while l < r:
            nums[l],nums[r] = nums[r],nums[l]
            l, r = l+1,r-1
        l, r = 0, k-1
        while l < r:
            nums[l],nums[r] = nums[r],nums[l]
            l, r = l+1,r-1
        l, r = k, len(nums)-1
        while l < r:
            nums[l],nums[r] = nums[r],nums[l]
            l, r = l+1,r-1




Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
Try to Solve in time Complexity 0(n) with extra Space.

 

Example 1:
Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

class Solution:
    def rotate(self, nums: List[int], k: int) -> List[int]:
        n = len(nums)
        k = k % n
        nums_new = []
        for i in range(k):
            nums_new.append(nums[n - k + i])
        for i in range(k, n):
            nums_new.append(nums[i - k])
        for i in range(n):
            nums[i] = nums_new[i]
        return nums


Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
Try to Solve in time Complexity 0(n) without any extra Space.
You Dont need to return an Array. Modify array in place. 

class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        n = len(nums)
        k = k % n

    # Reverse the entire array
        reverse(nums, 0, n - 1)

    # Reverse the first k elements
        reverse(nums, 0, k - 1)

    # Reverse the remaining n-k elements
        reverse(nums, k, n - 1)

def reverse(nums, start, end):
    while start < end:
        nums[start], nums[end] = nums[end], nums[start]
        start += 1
        end -= 1


 


