Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]â€¦nums[i]).
Return the running sum of nums.

class Solution:
    def runningSum(self, nums: List[int]) -> List[int]:
        for i in range(len(nums)-1):
            nums[i+1] += nums[i]
        return nums

def runningSum(self, nums):: This line defines the runningSum method. Since it includes self as a parameter, it is intended to be part of a class.

for i in range(len(nums) - 1):: The method uses a for loop that iterates over the indices of the nums list, excluding the last index. The loop runs from i = 0 to i = len(nums) - 2. The reason for excluding the last index is to avoid going out of bounds in the next step.

nums[i+1] += nums[i]: In each iteration of the loop, the element at the index i+1 is updated by adding the value of the element at index i. This operation effectively calculates the running sum up to the current element.

return nums: After the loop completes, the method returns the modified nums list, which now contains the running sum of the original elements.

For example, if the input nums is [1, 2, 3, 4], the method will modify it as follows:

At i = 0: nums[1] += nums[0] -> [1, 3, 3, 4]
At i = 1: nums[2] += nums[1] -> [1, 3, 6, 4]
At i = 2: nums[3] += nums[2] -> [1, 3, 6, 10]
So, the method will return [1, 3, 6, 10], which is the running sum of the input [1, 2, 3, 4].
